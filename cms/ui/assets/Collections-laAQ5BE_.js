import{u as _}from"./vue.f36acd1f-gY-k4IAX.js";import{d,h,g as n,w as i,i as f,u as C,r as y,o as a,A as w,c as b,p as k,f as x,a as e,b as v,_ as I}from"./index-COE1sEld.js";import{C as S}from"./ContentWithSideMenu-CFEWZ6fg.js";import{a as A}from"./api-CkCrquHF.js";import{c as B}from"./capitalize-FaBkvBOh.js";import"./index.es-B-U5nsY0.js";const r=t=>(k("data-v-7b81e526"),t=t(),x(),t),V={key:1,class:"container-fluid"},g=r(()=>e("hgroup",null,[e("h1",null,"Collection Editor"),e("p",null,"Please select a collection to edit.")],-1)),R=r(()=>e("div",null,[e("p",{class:"secondary-text"},[e("b",null,"Collections"),v(" refer to schemas that can have multiple sets of content associated with it: it can be consumed many times (by collection items). ")]),e("p",{class:"secondary-text"}," This is intended for multiple content items which all share the same properties, such as a collection of users. ")],-1)),$=[g,R],E=d({__name:"Collections",async setup(t){let o,c;_({title:"Unify · Content · Collections"});const m=C(),p=([o,c]=h(()=>A.getAllCollectionSchemas()),o=await o,c(),o).map(s=>({label:B(s.plural_display_name),link:`${m.resolve({name:"collection-contents"}).href}/${s.name}`}));return(s,T)=>{const u=y("RouterView");return a(),n(S,{items:f(p)},{default:i(()=>[(a(),n(u,{key:s.$route.params.name},{default:i(({Component:l})=>[l?(a(),n(w,{key:0,component:l},null,8,["component"])):(a(),b("section",V,$))]),_:1}))]),_:1},8,["items"])}}}),j=I(E,[["__scopeId","data-v-7b81e526"]]);export{j as default};
