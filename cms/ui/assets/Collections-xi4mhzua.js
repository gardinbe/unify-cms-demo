import{u as _}from"./vue.f36acd1f-DqJv3TzP.js";import{d,h as f,g as c,w as r,i as y,u as C,r as w,o as a,A as k,c as v,p as x,f as S,a as e,b as I,_ as b}from"./index-Ch-kkg_L.js";import{C as A}from"./ContentWithSideMenu-DtfEaj6H.js";import{a as B}from"./api-DZsGxFFw.js";import{c as V}from"./capitalize-FaBkvBOh.js";import"./index.es-C-FG5rke.js";const m=t=>(x("data-v-9e970e67"),t=t(),S(),t),g={key:1,class:"container-fluid"},R=m(()=>e("hgroup",null,[e("h1",null,"Collection Schema Editor"),e("p",null,"Please create or select a collection schema to edit.")],-1)),$=m(()=>e("div",null,[e("p",{class:"secondary-text"},[e("b",null,"Collections"),I(" refer to schemas that can have multiple sets of content associated with it: it can be consumed many times (by collection items). ")]),e("p",{class:"secondary-text"}," This is intended for multiple content items which all share the same properties, such as a collection of users. ")],-1)),E=[R,$],M=d({__name:"Collections",async setup(t){let o,n;_({title:"Unify · Schemas · Collections"});const l=C(),p=([o,n]=f(()=>B.getAllCollectionSchemas()),o=await o,n(),o).map(s=>({label:V(s.plural_display_name),link:`${l.resolve({name:"collection-schemas"}).href}/${s.name}`})),u={link:l.resolve({name:"create-collection-schema"}).href};return(s,T)=>{const h=w("RouterView");return a(),c(A,{items:y(p),"create-item":u},{default:r(()=>[(a(),c(h,{key:s.$route.params.name},{default:r(({Component:i})=>[i?(a(),c(k,{key:0,component:i},null,8,["component"])):(a(),v("section",g,E))]),_:1}))]),_:1},8,["items"])}}}),q=b(M,[["__scopeId","data-v-9e970e67"]]);export{q as default};
